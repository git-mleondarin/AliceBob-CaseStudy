# Créez un répertoire sur votre machine hôte qui contiendra le contenu qui sera utilisé. Disons que le répertoire s'appelle mleondarin-website et qu'il est situé dans /path/to/mleondarin-website sur votre machine hôte.
# Créez un fichier Docker dans le même répertoire que celui où se trouve votre répertoire mleondarin-website. Le fichier Docker doit avoir le contenu suivant :

# Utiliser l'image officielle de nginx comme image de base 
FROM nginx

# Copier le contenu du répertoire local dans le conteneur à /usr/share/nginx/html
COPY /path/to/mleondarin-website /usr/share/nginx/html

# Ouvrir le port 80 pour autoriser le trafic HTTP entrant
EXPOSE 80

# Construisez l'image Docker en utilisant la commande suivante dans le terminal :
docker build -t my-nginx-image .

# Exécutez un conteneur Docker basé sur l'image que vous venez de construire à l'aide de la commande suivante :
docker run -d -p 8080:80 my-nginx-image

# Vous pouvez alors accéder au serveur nginx fonctionnant dans le conteneur en visitant http://localhost:8080 dans votre navigateur web.
# Assurez-vous de remplacer /path/to/mleondarin-website par le chemin réel de votre répertoire contenant le contenu que vous voulez utiliser.

# Créer un fichier de configuration prometheus.yml (contenu dans le repo)
# Exécuter le conteneur Prometheus à l'aide de la commande suivante :
docker run -d -p 9090:9090 --name prometheus -v /path/to/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

# Exécuter le conteneur Grafana en utilisant la commande suivante :
docker run -d -p 3000:3000 --name grafana grafana/grafana

# Accédez à Grafana dans votre navigateur Web à l'adresse http://localhost:3000 et configurez-le pour qu'il se connecte à Prometheus en tant que source de données. Vous pouvez créer des tableaux de bord dans Grafana pour visualiser les mesures collectées par Prometheus et Node Exporter.
# Dans Grafana, vous pouvez créer des tableaux de bord pour surveiller des mesures telles que l'utilisation de la RAM, l'utilisation du CPU, le stockage, etc. pour votre conteneur nginx et la machine hôte.

# Générer un certificat SSL auto-signé et une clé à l'aide des commandes suivantes :
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /path/to/nginx-selfsigned.key -out /path/to/nginx-selfsigned.crt

# Créer un nouveau fichier de configuration nommé nginx-proxy.conf 
# Lancer un nouveau conteneur Nginx pour agir en tant que proxy inverse avec la configuration SSL :
docker run -d -p 443:443 -v /path/to/nginx-proxy.conf:/etc/nginx/conf.d/default.conf -v /path/to/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt -v /path/to/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key --link nginx-container-name:nginx --name nginx-proxy nginx

# Remplacez nginx-container-ip par l'adresse IP de votre conteneur nginx, nginx-container-name par le nom de votre conteneur nginx, et mettez à jour les chemins d'accès au certificat SSL et aux fichiers clés.
# Vous pouvez maintenant accéder au contenu de votre serveur nginx via HTTPS en visitant https://example.com dans votre navigateur web (remplacez example.com par votre nom de domaine ou votre adresse IP).

# Installer un serveur SSH dans le conteneur de surveillance en exécutant la commande suivante à l'intérieur du conteneur :
apt-get update
apt-get install openssh-server

# Optimiser la configuration SSH :
- Modifiez le fichier de configuration du serveur SSH /etc/ssh/sshd_config pour améliorer la sécurité. Voici quelques paramètres qu'il est recommandé de modifier dans le fichier de configuration :
  * Modifier le port SSH : Changez le port SSH par défaut (22) pour un port personnalisé afin de réduire les attaques automatisées.
  * Désactiver la connexion à la racine : Définissez PermitRootLogin no pour désactiver la connexion à la racine via SSH.
  * Utiliser les clés SSH : Désactiver l'authentification par mot de passe et utiliser les clés SSH pour l'authentification.
  * Limiter l'accès des utilisateurs : Utilisez AllowUsers pour spécifier quels utilisateurs peuvent accéder au serveur SSH.
  * Activer l'authentification à deux facteurs : Si possible, activez l'authentification à deux facteurs pour l'accès SSH.

# Redémarrer le service SSH :
service ssh restart

# Accès au conteneur de surveillance via SSH :
- Vous pouvez maintenant accéder au conteneur de surveillance via SSH en utilisant l'adresse IP ou le nom d'hôte du conteneur et le port personnalisé que vous avez spécifié dans la configuration SSH.

# Considérations de sécurité :
- Assurez-vous que seuls les utilisateurs autorisés ont accès au conteneur de surveillance via SSH.
- Maintenez le serveur SSH et le conteneur de surveillance à jour avec les derniers correctifs de sécurité.
- Surveillez les journaux SSH pour détecter toute activité suspecte.
- Envisager des mesures de sécurité supplémentaires telles que fail2ban pour se protéger contre les attaques par force brute.
